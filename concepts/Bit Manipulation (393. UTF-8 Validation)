// https://leetcode.com/problems/utf-8-validation/
// https://leetcode.com/problems/utf-8-validation/solution/


class Solution {
public:
    bool validUtf8(vector<int>& data) {
        
        int count = 0;
        int mask1 = 1<<7;
        int mask2 = 1<<6;
        
        for(auto x:data)
        {
            if(count == 0)
            {
                int mask = 1<<7;
                while( (mask & x) != 0)
                {
                    count += 1;
                    mask = mask>>1;
                }
                
                //1 byte character
                if(count == 0)
                    continue;
                
                if(count>4 || count == 1)
                    return false;
            }
            else
            {
                    if(!((x & mask1) != 0 && (mask2 & x) == 0))
                        return false;
                
            }
            count -= 1;
        }
        return count == 0;
    }
};
