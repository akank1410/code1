TC : 0.08/1.07

    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
    vector <int> v;
    int counter=0,i=0;

    while(true)
    {
    
    int a=0+i,b=0+i;//0->0,0:0,
    while(b<=c-1-i)
    {v.push_back(matrix[a][b++]);counter++;}
    if(counter>=r*c)
    break;

    int c1=1+i,d=c-1-i;
    while(c1<=r-1-i)
    {v.push_back(matrix[c1++][d]);counter++;}
    if(counter>=r*c)
    break;

    int e=r-1-i,f=c-2-i;
    while(f>=0+i)
    {v.push_back(matrix[e][f--]);counter++;}
    if(counter>=r*c)
    break;

    int g=r-2-i,h=0+i;
    while(g>=1+i)
    {v.push_back(matrix[g--][h]);counter++;}
    if(counter>=r*c)
    break;
    
    i++;
    }
    
    return v;
    }
    
    -----------
    
    SAME CONCEPT BUT DIFFERENT WAY OF CODING
    
        //Function to return a list of integers denoting spiral traversal of matrix.
    vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
    vector <int> v;
    int left=0,right=c-1,top=0,bottom=r-1;
    
    while(top<=bottom && left<=right)
    {
      
      for(int i=left; i<=right; i++)
      v.push_back(matrix[top][i]);
      top++;
      
      for(int i=top; i<=bottom; i++)
      v.push_back(matrix[i][right]);
      right--;
      
      if(top<=bottom){
      for(int i=right; i>=left; i--)
      v.push_back(matrix[bottom][i]);}
      bottom--;
      
      if(left<=right){
      for(int i=bottom; i>=top; i--)
      v.push_back(matrix[i][left]);}
      left++;
        
    }
    
    return v;
    
    }
    
    Site:  https://practice.geeksforgeeks.org/problems/spirally-traversing-a-matrix-1587115621/1
