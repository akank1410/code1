    int findLongestConseqSubseq(int arr[], int N)
    {
     
      // sort the array
        sort(arr,arr+N);
        
      //insert in set to remove duplicate
        set<int> s;
        for(int i=0; i<N;i++)
        s.insert(arr[i]);
        
      //insert element in vector
        vector<int> ans;
        for(auto x:s)
        ans.push_back(x);
        
        int count=1;
        int cnt=0;
        
      // check longest consecutive subsequence
         for(int i=0; i<ans.size(); i++)
         {
             if((ans[i]+1) == ans[i+1])
             count++;
             else
             {
                 if(cnt<count)
                 cnt=count;
                 count=1;
             }
         }
         
         return cnt;

--------------------------------------------------------

int main() {
   
   set <int> s {2,6,1,9,4,5,3};
   int n=7;

    for(auto i=s.begin(); i!=s.end(); i++)
    cout<<*i<<" ";
    int cur_len=1,max_len=1;
cout<<"\n";
    for(auto it1=s.begin(); it1 != s.end(); it1++)
    {
        auto it2 = it1;
        it2++;
        if(it2 == s.end()) break;
        if(*it2 == *it1 + 1) cur_len++;
        cout<<cur_len<<" ";

        if(cur_len>max_len)max_len=cur_len;
        if(*it2 != *it1 + 1) cur_len=1;

    }
    cout<<"\n"<<max_len;
    return 0;
    }
 --------------------------------------------------------------
 
 METHOD 3
 
     int findLongestConseqSubseq(int arr[], int N)
    {
     
      // sort the array
        sort(arr,arr+N);
        
      //insert in set to remove duplicate
        set<int> s;
        for(int i=0; i<N;i++)
        s.insert(arr[i]);
        
      //insert element in vector
        vector<int> ans;
        for(auto x:s)
        ans.push_back(x);
        
        int count=1;
        int cnt=0;
        
      // check longest consecutive subsequence
         for(int i=0; i<ans.size(); i++)
         {
             if((ans[i]+1) == ans[i+1])
             count++;
             else
             {
                 if(cnt<count)
                 cnt=count;
                 count=1;
             }
         }
         
         return cnt;

--------------------------------------------------------

int main() {
   
   set <int> s {2,6,1,9,4,5,3};
   int n=7;

    for(auto i=s.begin(); i!=s.end(); i++)
    cout<<*i<<" ";
    int cur_len=1,max_len=1;
cout<<"\n";
    for(auto it1=s.begin(); it1 != s.end(); it1++)
    {
        auto it2 = it1;
        it2++;
        if(it2 == s.end()) break;
        if(*it2 == *it1 + 1) cur_len++;
        cout<<cur_len<<" ";

        if(cur_len>max_len)max_len=cur_len;
        if(*it2 != *it1 + 1) cur_len=1;

    }
    cout<<"\n"<<max_len;
    return 0;
    
    -----------------------------------------------
    }
