    int minJumps(int arr[], int n){
        // Your code here
if(n==0 || n==1)
return 0;
else 
{
int jump = -1, i=0,c=0;
//cout<<"jump : "<<jump<<"| index : "<<i<<" | count : "<<c<<endl;
 while(i<n-1)
{
	jump = arr[i];
	if(jump == 0)
	return -1;
	
	if( i+jump >= n-1)
	i=i+jump;
	else
	i = i+ distance(arr+i, max_element(arr+i+1, arr+i+jump+1))  ;
	c++;
	//cout<<"jump : "<<jump<<"| index : "<<i<<" | count : "<<c<<endl;
}

return c;
} 
    }
    
 Not passed
    
 0   1   2   3   4   5   6   7   8   9   10   11   12   13   14
 9  10   1   1   2   3   4   0   0   0   0    0    0    0     1
 Ans : 2
    -----------------------------------------------------------------------
    
    METHOD 2 : TC - 0.23/1.25
    
        int minJumps(int arr[], int n){
        // Your code here
if(n==0 || n==1)
return 0;
else 
{

int m[n];
for(int i=0;i<n;i++)
m[i] = i+arr[i];

int c=0,i=0;
while(i<n-1)
{   if(arr[i] == 0)
        return -1;
    i = i + distance(m+i, max_element(m+i+1,m+i+arr[i]+1));
    c++;
}
return c;

    }
    }
