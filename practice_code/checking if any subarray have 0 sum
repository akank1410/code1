TC: 0.64/3.02    
    
    bool subArrayExists(int arr[], int n)
    {
        //Your code here
        
    unordered_map <int,int> m;
    int sum=0;
        
        for(int i=0; i<n; i++)
        {
            if(arr[i] == 0)
            return true;
            
            sum += arr[i];
            if(m[sum] || sum == 0)
                return true;
            m[sum]++;
        }
        return false;
    }
    
    https://practice.geeksforgeeks.org/problems/subarray-with-0-sum-1587115621/1#
    
    LOGIC: if we keep on summing the elements after each iteration then if there is a subarray with sum zero then, previously occured sum will again occured.  
    
    WORKING:
    unordered_map <int,int> m;
int sum=0;
for(int i=0;i<n;i++)
{
	sum += arr[i];
	m[sum]++;
}

i=0  | 4 -> 1
i=1  | 6 -> 1
i=2  | 3 -> 1
i=3  | 4 -> 2
i=4  | 10 -> 1

4->2, 3->1, 10->1, 6->1




4  2 -3  1  6
| /| /| /| /|
|/ |/ |/ |/
6 -1 -2  7
| /| /| /
|/ |/ |/
5 -3  5
| /| /
|/ |/
2  2
| /
|/
4


4+2 = 6
4+2-3 = 3
4+2-3+1 = 4
4+2-3+1+6 = 10

2-3 = -1
2-3+1 = 0
2-3+1+6 = 6

-3+1 = -2
-3+1+6 = 4

1+6 = 7






