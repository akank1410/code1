// Method 1:
// Runtime: 176 ms, faster than 5.24% of C++ online submissions for UTF-8 Validation.
// Memory Usage: 14 MB, less than 38.65% of C++ online submissions for UTF-8 Validation.

class Solution {
public:
    string bin(int ele, int base)
    {
         if(ele<base)
         {
             return to_string(ele);
         }
        
        int r = ele%base;
        string s = bin(ele/base, base);
        return s + to_string(r);
    }
    
    bool validUtf8(vector<int>& data) {
        
        int count =0;
        for(int i=0; i<data.size(); i++)
        {
            int x = data[i];
            string item = bin(x,2);
            int len = item.length();
            string dum = "00000000";
            item = (len >= 8)? item.substr(len - 8): dum.substr(len%8) + item;
            
            if(count != 0)
            {
                if(item.substr(0,2) == "10")
                    {count--;continue;}
                else 
                    return false;
            }
            
            if(item.substr(0,5) == "11110")
                count = 3;
            else if(item.substr(0,4) == "1110")
                count = 2;
            else if(item.substr(0,3) == "110")
                count = 1;
            else if(item[0] == '0')
                 continue;
            else
                return false;
            
            
            if(i+count >= data.size())
                return false;
            
        }
        
        return true;
    }
};
