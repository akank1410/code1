// Runtime: 50 ms, faster than 15.83% of C++ online submissions for N-ary Tree Level Order Traversal.
// Memory Usage: 11.9 MB, less than 34.37% of C++ online submissions for N-ary Tree Level Order Traversal.

/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        
        vector<vector<int>> ans;
        //vector<TreeNode*> v;
        //v.push_back(root->children);
        if(root==NULL)
            return ans;
        queue<Node*> q;
        
        q.push(root);
        
        while(! q.empty())
        {
            int size = q.size();
            vector<int> store;
            
            for(int i=0;i<size;i++)
            {
                Node* r = q.front();
                q.pop();
                int val = r->val;
                store.push_back(val);
                vector<Node*>vec = r->children;
                for(auto x:vec)
                    q.push(x);
            }
            ans.push_back(store);
        }
        return ans;   
    }
};
