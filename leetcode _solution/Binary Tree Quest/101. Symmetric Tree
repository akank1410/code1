//Runtime: 8 ms, faster than 59.38% of C++ online submissions for Symmetric Tree.
Memory Usage: 16.2 MB, less than 93.78% of C++ online submissions for Symmetric Tree.

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    bool isSym(TreeNode* rleft, TreeNode* rright)
    {
        if(rleft == NULL || rright == NULL) return rleft==rright;
        
        if(rleft->val != rright->val) return false;
        
        return isSym(rleft->left,rright->right) && isSym(rleft->right , rright->left);
    }
    
    bool isSymmetric(TreeNode* root) {
        
        if(root == NULL) return true;
        
        return isSym(root->left,root->right);
    }
};

// [1,2,2,null,3,null,3]
