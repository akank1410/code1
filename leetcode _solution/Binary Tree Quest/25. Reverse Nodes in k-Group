// Runtime: 10 ms, faster than 99.03% of C++ online submissions for Reverse Nodes in k-Group.
// Memory Usage: 11.6 MB, less than 29.71% of C++ online submissions for Reverse Nodes in k-Group.

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseKGroup(ListNode* head, int k) {
        
    ListNode* temp = head; int count=0;
        
    while(temp!=NULL && count < k)
    {
        temp = temp->next;
        count++;
    }
    
    if(count != k)
        return head;
        
    ListNode* prev = NULL;
    ListNode* cur = head;
    ListNode* nex; int i=0;
        
    while(cur!=NULL && i<k )
    {
        nex = cur->next;
        cur->next = prev;
        prev = cur;
        cur = nex;
        i++;
    }
        
      
    if(cur!=NULL )
    head->next = reverseKGroup(cur,k);

        
    return prev;
        
            
        
    }
};
