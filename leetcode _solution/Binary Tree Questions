// 1448. Count Good Nodes in Binary Tree
// https://leetcode.com/problems/count-good-nodes-in-binary-tree/

    int good(TreeNode* root, int mx)
    {
        if(!root)
            return 0;
        
        return ((mx <= root->val)? 1:0) + good(root->left,max(mx,root->val)) + good(root->right, max(mx, root->val));
            
    }
        
    
    int goodNodes(TreeNode* root) {
        
        return good(root, INT_MIN);
        
        
    }
    
    ---------------------------------------------------------------


class Solution
{
public:
    int ans=0;
    void pre(TreeNode* root, int maxi)
    {
        if(!root) return;
        if(root->val >= maxi)
        {
                ans++;
                maxi = root->val;
         }
         
         pre(root->left, maxi);
         pre(root->right, maxi);
      }
      
   int goodNodes(TreeNode* root)
   {
        pre(root, INT_MIN);
        return ans;
        
    }
    };
    
    TC : O(n)
    SC : O(n) for recursive stack space
