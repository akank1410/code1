
#include <iostream>
using namespace std;

struct Node{
	int data;
	Node* next;
};

//only for the 1st Node
void initNode(struct Node *head, int n)
{
	head->data = n; head->next = NULL;
}

//appending
void addNode(struct Node *head, int val)
{
	Node *n = new Node;
	n->data = val; n->next = NULL;

	Node *cur = head;
	while(cur) 
	{
		if(cur->next = NULL)
		{
			cur->next = n;
			return;
		}
		cur = cur->next;
	}
}

void insertFront(struct Node **head, int val)
{
	Node *n= new Node;
	n->data = val; n->next=NULL;

	n = *head;
	*head = n;
}

struct Node *searchNode(struct Node *head, int n)
{
	Node *cur = head;
	while(cur)
	{
		if(cur->data == n) return cur;
		
		cur = cur->next;
	}
	cout<<"No Node "<<n<<" in list.\n";
}

bool deleteNode(struct Node **head, Node *ptrDel)
{
	Node *cur = *head;
	if(ptrDel == *head)
	{
		*head = ptrDel->next;
		delete ptrDel;
		return true;
	}

	while(cur)
	{
	if(cur->next == ptrDel)
	{
		cur->next = ptrDel->next;
		delete ptrDel;	
		return true;
	}
	cur = cur->next;
	}
	return false;
}

/* reverse the list */
struct Node* reverse(struct Node** head)
{
	Node *parent = *head;
	Node *me = parent->next;
	Node *child = me->next;

	/*make parent as tail */
	parent->next = NULL;
	while(child)
	{
		me->next = parent;
		parent = me;
		me = child;
		child = child->next;
	}
	me->next = parent;
	*head = me;
	return *head;
}

void deleteLinkedList(Struct Node **node)
{
	struct Node *tmpNode;
	while(*node)
	{
		tmpNode = *node;
		*node = tmpNode->next;
		delete tmpNode;
	}
}

voud display(struct Node *head)
{
	Node *list = head;
	while(list)
	{
		cout<<list->data<<" ";
		list = list->next;
	}
	cout<<"\n\n";
}

int main()
{
	struct Node *newHead;
	struct Node *head = new Node;
	
	initNode(head,20);
	addNode(head,20);
	addNode(head,30);
	addNode(head,35);
	addNode(head,40);
	insertFront(&head,5);
		
	int numDel = 5;
	Node *ptrDelete = searchNode(head,numDel);
	if(deleteNode(&head, ptrDelete))
		cout<<"Node"<<numDel<<" deleted!\n";
	display(head);
	
	reverse(&head);	
return 0;
}

// https://www.bogotobogo.com/cplusplus/linkedlist.php
